{"mappings":"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","sources":["src/index.js"],"sourcesContent":["const users = [\n  {\n    role: 'guest',\n    name: 'Гість',\n  },\n  {\n    role: 'admin',\n    name: 'nagibator228',\n  },\n  {\n    role: 'user',\n    name: 'skuf1488',\n  },\n];\nlet currentUser = '';\n\nlet postData = [\n  // {\n  //   publicationTheme: 'Тема публикации 1',\n  //   publicationText:\n  //     'Текст публикации 1. Lorem ipsum dolor sit amet, consectetur adipiscing elit.',\n  //   id: '0',\n  //   comments: [],\n  // },\n  // {\n  //   publicationTheme: 'Тема публикации 2',\n  //   publicationText:\n  //     'Текст публикации 2. Etiam felis eros, lobortis in efficitur sed, scelerisque vel quam.',\n  //   id: '1',\n  //   comments: [],\n  // },\n];\n\ncreateHeader();\nrenderPosts();\nchangeButtons('guest');\nfunction createHeader() {\n  const headerHTML = `\n        <div class=\"header\">\n             <button id=\"create-theme-btn\" class=\"create-theme-btn\">Додати тему</button>\n        </div>\n    `;\n\n  document.body.insertAdjacentHTML('afterbegin', headerHTML);\n  document.querySelector('.create-theme-btn').addEventListener('click', () => {\n    const newPost = getPostData();\n    getLocalSorage();\n    if (newPost) {\n      postData.push(newPost);\n      setLocalSorage();\n      renderPosts();\n    }\n  });\n  const selectMarkup =\n    `<select name=\"example\" class=\"select-user\"> ` +\n    users\n      .map(user => {\n        return `<option value=\"${user.name}\">${user.name} (${user.role})</option>`;\n      })\n      .join('') +\n    `</select>`;\n\n  document\n    .querySelector('.header')\n    .insertAdjacentHTML('afterbegin', selectMarkup);\n\n  const userSelect = document.querySelector('.select-user');\n\n  document.querySelector('.select-user').addEventListener('change', evt => {\n    currentUser = users.find(user => user.name == userSelect.value);\n    changeButtons(currentUser.role);\n  });\n}\n\nasync function renderPosts() {\n  getLocalSorage();\n  document.getElementById('posts-container').innerHTML = '';\n  postData.forEach(item => {\n    createPostBlock(item.publicationTheme, item.publicationText, item.id);\n  });\n  renderComments();\n  addEventListeners();\n}\n\nasync function renderComments() {\n  document.querySelectorAll('.post').forEach(postContainer => {\n    let newMarkup = '';\n    postData\n      .find(post => post.id == postContainer.getAttribute('data-index'))\n      .comments.forEach(comment => {\n        newMarkup += `<li class = 'comment'>${comment}<li>`;\n      });\n    postContainer.querySelector('.comments').innerHTML = newMarkup;\n  });\n}\n\nfunction addEventListeners() {\n  document.querySelectorAll('.post').forEach(postContainer => {\n    postContainer\n      .querySelector('.post-delete-btn')\n      .addEventListener('click', evt => {\n        const parentNode = evt.currentTarget.parentNode.parentNode;\n        postData = JSON.parse(localStorage.getItem('posts')).filter(\n          el => el.id != parentNode.getAttribute('data-index')\n        );\n        setLocalSorage();\n        parentNode.remove();\n      });\n\n    postContainer\n      .querySelector('.post-edit-btn')\n      .addEventListener('click', evt => {\n        getLocalSorage();\n        const id =\n          evt.currentTarget.parentNode.parentNode.getAttribute('data-index');\n        let post = postData.find(post => post.id === id);\n        const updatedPost = getPostData(\n          post.publicationTheme,\n          post.publicationText\n        );\n        if (post) {\n          post.publicationText = updatedPost.publicationText;\n          post.publicationTheme = updatedPost.publicationTheme;\n          setLocalSorage();\n          renderPosts();\n        }\n      });\n    postContainer\n      .querySelector('.post-comment-btn')\n      .addEventListener('click', evt => {\n        getLocalSorage();\n        const parentNode = evt.currentTarget.parentNode.parentNode;\n        const commentText = prompt('Введите ваш комментарий:');\n        if (commentText) {\n          const post = postData.find(\n            post => post.id === parentNode.getAttribute('data-index')\n          );\n          post.comments.push(commentText);\n          setLocalSorage();\n          renderPosts();\n        }\n      });\n  });\n}\n\nfunction changeButtons(curRole) {\n  if (curRole == 'guest') {\n    document.querySelectorAll('button').forEach(button => {\n      button.setAttribute('disabled', 'true');\n    });\n  } else if (curRole == 'admin') {\n    document.querySelectorAll('button').forEach(button => {\n      button.removeAttribute('disabled');\n    });\n  } else if (curRole == 'user') {\n    document.querySelectorAll('button').forEach(button => {\n      button.setAttribute('disabled', 'true');\n    });\n    document.querySelectorAll('.post-comment-btn').forEach(button => {\n      button.removeAttribute('disabled');\n    });\n  }\n}\n\nfunction createPostBlock(title, content, index) {\n  const postHTML = `\n        <div class=\"post\" data-index=\"${index}\">\n            <h2 class=\"post-title\">${title}</h2>\n            <p class=\"post-content\">${content}</p>\n            <div class=\"post-actions\">\n                <button class=\"post-delete-btn\">Видалити</button>\n                <button class=\"post-edit-btn\">Редагувати</button>\n                <button class=\"post-comment-btn\">Коментувати</button>\n            </div>\n            <ul class = 'comments'>\n            </ul>\n        </div>\n    `;\n  const postsContainer = document.getElementById('posts-container');\n  postsContainer.insertAdjacentHTML('beforeend', postHTML);\n}\n\nfunction getPostData(defaultTitle = '', defaultContent = '') {\n  const title = prompt('Введите тему публикации:', defaultTitle);\n  const content = prompt('Введите текст публикации:', defaultContent);\n  if (title !== null && content !== null) {\n    const newId =\n      postData.length != 0\n        ? toString(parseInt(postData[postData.length - 1].id) + 1)\n        : '0';\n    return {\n      publicationTheme: title,\n      publicationText: content,\n      id: newId,\n      comments: [],\n    };\n  }\n  return;\n}\n\nfunction setLocalSorage() {\n  localStorage.setItem('posts', JSON.stringify(postData));\n}\n\nfunction getLocalSorage() {\n  postData = JSON.parse(localStorage.getItem('posts'));\n}\n"],"names":["$1f0dc3b9307be026$var$users","role","name","$1f0dc3b9307be026$var$currentUser","$1f0dc3b9307be026$var$postData","async","$1f0dc3b9307be026$var$renderPosts","$1f0dc3b9307be026$var$getLocalSorage","document","getElementById","innerHTML","forEach","item","title","content","index","postHTML","insertAdjacentHTML","$1f0dc3b9307be026$var$createPostBlock","publicationTheme","publicationText","id","querySelectorAll","postContainer","newMarkup","find","post","getAttribute","comments","comment","querySelector","$1f0dc3b9307be026$var$renderComments","addEventListener","evt","parentNode","currentTarget","JSON","parse","localStorage","getItem","filter","el","$1f0dc3b9307be026$var$setLocalSorage","remove","post1","updatedPost","$1f0dc3b9307be026$var$getPostData","commentText","prompt","push","$1f0dc3b9307be026$var$changeButtons","curRole","button","setAttribute","removeAttribute","defaultTitle","defaultContent","length","toString","parseInt","setItem","stringify","body","newPost","selectMarkup","map","user","join","userSelect","value","$1f0dc3b9307be026$var$createHeader"],"version":3,"file":"index.d0658f7a.js.map"}